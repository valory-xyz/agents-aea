name: AEA framework sanity checks and tests

on:
  push:
    branches:
      - develop
      - main
  pull_request:

env:
  IS_CI_WORKFLOW: True

jobs:
  platform_checks:
    continue-on-error: True
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python_version: ['3.7', '3.8', '3.9', '3.10']
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python_version }}
      - uses: actions/setup-go@v3
        with:
          go-version: "1.17.7"
      - if: matrix.os == 'ubuntu-latest'
        name: Install dependencies (ubuntu-latest)
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get autoremove
          sudo apt-get autoclean
          pip install tomte[tox]==0.1.5
          # install Protobuf compiler
          wget https://github.com/protocolbuffers/protobuf/releases/download/v3.19.4/protoc-3.19.4-linux-x86_64.zip
          unzip protoc-3.19.4-linux-x86_64.zip -d protoc
          sudo mv protoc/bin/protoc /usr/local/bin/protoc
          make protolint_install
          # install ipfs
          wget https://dist.ipfs.tech/go-ipfs/v0.6.0/go-ipfs_v0.6.0_linux-amd64.tar.gz
          tar -xvzf go-ipfs_v0.6.0_linux-amd64.tar.gz
          cd go-ipfs
          sudo ./install.sh
          cd ..
          rm -rf go-ipfs
          ipfs init
      # sudo apt-get install -y protobuf-compiler
      # use sudo rm /var/lib/apt/lists/lock above in line above update if dependency install failures persist
      # use sudo apt-get dist-upgrade above in line below update if dependency install failures persist
      - if: matrix.os == 'macos-latest'
        name: Install dependencies (macos-latest)
        run: |
          pip install tomte[tox]==0.1.5
          brew install gcc
          # brew install protobuf
          # brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/72457f0166d5619a83f508f2345b22d0617b5021/Formula/protobuf.rb
          wget https://github.com/protocolbuffers/protobuf/releases/download/v3.19.4/protoc-3.19.4-osx-x86_64.zip
          unzip protoc-3.19.4-osx-x86_64.zip -d protoc
          sudo mv protoc/bin/protoc /usr/local/bin/protoc
          brew tap yoheimuta/protolint
          brew install protolint
          # install ipfs
          curl -O https://dist.ipfs.tech/go-ipfs/v0.6.0/go-ipfs_v0.6.0_darwin-amd64.tar.gz
          tar -xvzf go-ipfs_v0.6.0_darwin-amd64.tar.gz
          cd go-ipfs
          sudo ./install.sh
          cd ..
          rm -rf go-ipfs
          ipfs init
      - if: matrix.os == 'windows-latest'
        name: Install dependencies (windows-latest)
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
        run: |
          python -m pip install -U pip
          echo "::add-path::C:\Program Files (x86)\Windows Kits\10\bin\10.0.18362.0\x64"
          choco install protoc --version 3.19.4
          choco install mingw -y
          choco install make -y
          # to check make was installed
          make --version
          pip install tomte[tox]==0.1.5
          # wget https://github.com/protocolbuffers/protobuf/releases/download/v3.19.4/protoc-3.19.4-win64.zip
          # unzip protoc-3.19.4-win64.zip -d protoc
          # sudo mv protoc/bin/protoc /usr/local/bin/protoc
          python scripts/update_symlinks_cross_platform.py
          make protolint_install_win
          # just check protolint runs
          protolint version
          curl https://dist.ipfs.tech/go-ipfs/v0.6.0/go-ipfs_v0.6.0_windows-amd64.zip -o go-ipfs_v0.6.0.zip
          Expand-Archive -Path go-ipfs_v0.6.0.zip -DestinationPath ~\Apps\
          cp ~\Apps\go-ipfs\ipfs.exe C:\Users\runneradmin\go\bin\
          ipfs init

      - name: Plugin unit tests
        run: |
          tox -e plugins-py${{ matrix.python_version }} -- -m 'not integration and not unstable and not profiling'

